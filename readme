说明：
    此demo程序共分两部分，Dev和App，其中Dev用来模拟设备端，App用来模拟手机端
    Dev模拟的是一个温控器，包含两个参数，温度和开关，温度范围0～100，开关值0/1

标准使用流程：
    Dev端：
    1) 运行Dev程序，在弹出的窗口的[设备序号]中输入一个设备序号，默认为01
    2) 点击[设备激活]，即在JD+服务器上激活了这个设备，服务器会返回两个值，feed_id和access_key，这两个参数将用于App端的验证
    3) 此时[设备激活]按钮和[设备序号]文本框被禁用，[设备状态]和[上传数据]按钮被使能，并且在线状态的指示灯变为绿灯
    4) 当前可进行三个操作，改变设备状态、改变温度值和上传数据
        a. 改变设备状态，改变后状态只在本地，需上传数据才可以将此状态通知服务器
        b. 改变温度值，同上
        c. 上传数据，将设备状态和温度值两个数据上传到服务器

    App端：
    1) 运行App程序，在弹出的窗口的[Feed_ID]和[访问密钥]中填入刚刚设备端激活时返回的feed_id和access_key
    2) 点击[查询状态]，即查询指定设备是否在线，若在线，则在线状态指示灯变为绿灯，[控制设备]和[读取设备]按钮被使能
    3) 当前可进行两种操作，控制设备和读取数据
        a. 控制设备，点击此按钮将控制命令上传服务器，服务器将通过与设备的TCP通道推送给设备，可以看到设备端的[设备状态]发生相应变化，
           收到服务器的返回包后，App端的按键才会进行相应变化，在网络延迟较大时，可以看出变化的先后顺序
        b. 读取数据，读取当前所有变量的最新值(Dev上传到服务器的值)

常见问题：
    如果一段时间不进行任何操作，HTTP的连接会被断开，故需重新建立HTTPS连接，App端执行[控制设备]和[读取设备]皆可重建连接，
Dev端只能通过[上传数据]来进行重连，因为[设备状态]只更改了本地参数而没有同服务器交互
    由于JD服务器正在不断完善以及此模拟程序只是Demo，故存在一些Bug，待后续修复